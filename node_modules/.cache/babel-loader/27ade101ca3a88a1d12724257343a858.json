{"ast":null,"code":"var _jsxFileName = \"/Users/joshuacolvin/Desktop/Development/meal-db/src/router/components/meals/search_meal/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { filterName } from '../../../../app_state/action_creators/filterActions.jsx';\nimport styles from './index.module.css';\nimport { PreviewCard } from './previewCard.jsx';\nimport { Tag } from '../../../../static_components';\n\nconst SearchMeal = ({\n  history,\n  filterName,\n  meals\n}) => {\n  _s();\n\n  // Initialize state\n  const [filteredMeals, setFilteredMeals] = useState(undefined);\n  const [isLoading, setLoading] = useState(false); // Initialie references\n\n  const inputRef = useRef(\"\");\n  useEffect(() => {\n    console.log(\"meals prop:\");\n    console.log(meals);\n    if (meals !== undefined) setFilteredMeals([...meals]); // Return function for cleanup\n\n    return function () {\n      filterName({\n        meals: undefined\n      });\n    };\n  }, [meals, filterName]);\n\n  const handleClick = function () {\n    // Update loading state\n    setLoading(true); // Get user input\n\n    let enteredVal = inputRef.current.value.toLowerCase(); // Extract first letter for searching mealdb\n\n    let firstLetter = enteredVal.slice(0, 1);\n\n    if (firstLetter) {\n      fetch(`https://www.themealdb.com/api/json/v1/1/search.php?f=${firstLetter}`).then(response => response.json()).then(data => {\n        let filteredMeals = data.meals.filter(meal => meal[\"strMeal\"].toLowerCase().includes(enteredVal));\n        filterName({\n          meals: filteredMeals\n        }); // Done loading request\n\n        setLoading(false);\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: styles.searchMealHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Tag, {\n    path: () => history.goBack(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, \"Go Back\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ins\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"Search Meal\"))), /*#__PURE__*/React.createElement(\"input\", {\n    ref: inputRef,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.searchBtn,\n    onClick: () => handleClick(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }\n  }, \"Search\"), filteredMeals !== undefined && (isLoading ? /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 6\n    }\n  }, \"Loading...\") : filteredMeals.length !== 0 ? filteredMeals.map((meal, i) => /*#__PURE__*/React.createElement(PreviewCard, Object.assign({\n    key: i\n  }, meal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 37\n    }\n  }))) : /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, \"Unable to find \\\"\", inputRef.current.value, \"\\\"\")));\n};\n\n_s(SearchMeal, \"Wx+p8/MydhVJoR6BInAG4vwNyAw=\");\n\n_c = SearchMeal;\n\nconst mapStateToProps = state => {\n  return {\n    meals: state.filterMealsReducer[0]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  filterName\n})(SearchMeal);\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchMeal\");","map":{"version":3,"sources":["/Users/joshuacolvin/Desktop/Development/meal-db/src/router/components/meals/search_meal/index.jsx"],"names":["React","useEffect","useState","useRef","connect","filterName","styles","PreviewCard","Tag","SearchMeal","history","meals","filteredMeals","setFilteredMeals","undefined","isLoading","setLoading","inputRef","console","log","handleClick","enteredVal","current","value","toLowerCase","firstLetter","slice","fetch","then","response","json","data","filter","meal","includes","searchMealHeader","goBack","searchBtn","length","map","i","mapStateToProps","state","filterMealsReducer"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\n\nimport { connect } from 'react-redux';\nimport { filterName } from '../../../../app_state/action_creators/filterActions.jsx';\n\nimport styles from './index.module.css';\n\nimport { PreviewCard } from './previewCard.jsx';\nimport { Tag } from '../../../../static_components';\n\nconst SearchMeal = ({ history, filterName, meals }) => {\n\t// Initialize state\n\tconst [filteredMeals, setFilteredMeals] = useState(undefined);\n\tconst [isLoading, setLoading] = useState(false);\n\t// Initialie references\n\tconst inputRef = useRef(\"\");\n\n\tuseEffect(() => {\n\t\tconsole.log(\"meals prop:\");\n\t\tconsole.log(meals);\n\t\tif (meals !== undefined)\n\t\t\tsetFilteredMeals([...meals])\n\n\t\t// Return function for cleanup\n\t\treturn function() {\n\t\t\tfilterName({meals:undefined});\n\t\t}\n\t},[meals,filterName]);\n\n\tconst handleClick = function() {\n\t\t// Update loading state\n\t\tsetLoading(true);\n\t\t// Get user input\n\t\tlet enteredVal = inputRef.current.value.toLowerCase();\n\t\t// Extract first letter for searching mealdb\n\t\tlet firstLetter = enteredVal.slice(0,1);\n\t\tif (firstLetter) {\n\t\t\tfetch(`https://www.themealdb.com/api/json/v1/1/search.php?f=${firstLetter}`)\n\t\t\t\t.then(response => response.json())\n\t\t\t\t.then(data =>  {\n\t\t\t\t\tlet filteredMeals = data.meals.filter((meal) => meal[\"strMeal\"].toLowerCase().includes(enteredVal));\n\t\t\t\t\tfilterName({\n\t\t\t\t\t\tmeals: filteredMeals\n\t\t\t\t\t});\n\n\t\t\t\t\t// Done loading request\n\t\t\t\t\tsetLoading(false);\n\t\t\t\t})\n\t\t}\n\t}\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<header className={styles.searchMealHeader}>\n\t\t\t\t<Tag path={() => history.goBack()}>Go Back</Tag>\t\n\t\t\t\t<h2><ins>Search Meal</ins></h2>\n\t\t\t</header>\n\t\t\t<input ref={inputRef} type=\"text\" />\n\t\t\t<div className={styles.searchBtn} onClick={() => handleClick()}>Search</div>\n\t\t\t{\n\t\t\t\tfilteredMeals !== undefined && \n\t\t\t\t(\n\t\t\t\t\tisLoading ?\n\t\t\t\t\t<h3>Loading...</h3> :\n\t\t\t\t\t(\n\t\t\t\t\t\tfilteredMeals.length !== 0 ?\n\t\t\t\t\t\tfilteredMeals.map((meal,i) => <PreviewCard key={i} {...meal} />) :\n\t\t\t\t\t\t<h3>Unable to find \"{inputRef.current.value}\"</h3>\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t}\n\t\t</React.Fragment>\n\t)\n}\n\nconst mapStateToProps = state => {\n\treturn {meals: state.filterMealsReducer[0]};\n}\nexport default connect(\n\tmapStateToProps,\n\t{ filterName }\n)(SearchMeal)"]},"metadata":{},"sourceType":"module"}