{"ast":null,"code":"var _jsxFileName = \"/Users/joshuacolvin/Desktop/Development/meal-db/src/router/components/meals/index.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { filterID } from '../../../app_state/action_creators/filterActions.jsx';\nimport { RecipeCard } from '../../../static_components';\n\nclass Meal extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(props.match.params.mealID);\n    this.state = {\n      isLoading: true,\n      mealID: props.match.params.mealID,\n      meal: {\n        strMeal: \"\",\n        strCategory: \"\",\n        strArea: \"\",\n        strInstructions: \"\",\n        strMealThumb: \"\",\n        strTags: \"\",\n        strYoutube: \"\",\n        strIngredients: [],\n        strSource: \"\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${this.state.mealID}`).then(response => response.json()).then(data => this.props.filterID(data));\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.meal[\"strMeal\"].localeCompare(\"\") === 0) {\n      let i = 1;\n      let formattedStr = \"\";\n      let isEmptyStr;\n      let ingredients = [];\n\n      do {\n        isEmptyStr = this.props.meal[`strMeasure${i}`] === \"\" || this.props.meal[`strMeasure${i}`] === \" \";\n        formattedStr = this.props.meal[`strIngredient${i}`] + (isEmptyStr ? \"\" : ` - ${this.props.meal[`strMeasure${i}`]}`);\n        ingredients.push(formattedStr);\n        i++;\n      } while (this.props.meal[`strIngredient${i}`] !== \"\" && this.props.meal[`strIngredient${i}`] !== null && i <= 20);\n\n      this.setState(() => ({\n        isLoading: false,\n        meal: {\n          strMeal: this.props.meal[\"strMeal\"],\n          strCategory: this.props.meal[\"strCategory\"],\n          strArea: this.props.meal[\"strArea\"],\n          strInstructions: this.props.meal[\"strInstructions\"],\n          strMealThumb: this.props.meal[\"strMealThumb\"],\n          strTags: this.props.meal[\"strTags\"],\n          strYoutube: this.props.meal[\"strYoutube\"],\n          strIngredients: [...ingredients],\n          strSource: this.props.meal[\"strSource\"]\n        }\n      }));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 4\n      }\n    }, this.state.isLoading ? /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 6\n      }\n    }, \"Loading...\") : /*#__PURE__*/React.createElement(RecipeCard, Object.assign({}, this.state.meal, {\n      btnText: \"Home\",\n      btnPath: \"/Home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 6\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    meal: state.filterMealsReducer[0]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  filterID\n})(Meal);","map":{"version":3,"sources":["/Users/joshuacolvin/Desktop/Development/meal-db/src/router/components/meals/index.jsx"],"names":["React","connect","filterID","RecipeCard","Meal","Component","constructor","props","console","log","match","params","mealID","state","isLoading","meal","strMeal","strCategory","strArea","strInstructions","strMealThumb","strTags","strYoutube","strIngredients","strSource","componentDidMount","fetch","then","response","json","data","componentDidUpdate","prevProps","prevState","localeCompare","i","formattedStr","isEmptyStr","ingredients","push","setState","render","mapStateToProps","filterMealsReducer"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { connect } from 'react-redux';\nimport { filterID } from '../../../app_state/action_creators/filterActions.jsx';\n\nimport { RecipeCard } from '../../../static_components';\n\nclass Meal extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tconsole.log(props.match.params.mealID);\n\t\tthis.state = {\n\t\t\tisLoading: true,\n\t\t\tmealID: props.match.params.mealID,\n\t\t\tmeal: { \n\t\t\t\tstrMeal: \"\",\n\t\t\t\tstrCategory: \"\",\n\t\t\t\tstrArea: \"\",\n\t\t\t\tstrInstructions: \"\",\n\t\t\t\tstrMealThumb: \"\",\n\t\t\t\tstrTags: \"\",\n\t\t\t\tstrYoutube: \"\",\n\t\t\t\tstrIngredients: [],\n\t\t\t\tstrSource: \"\"\n\t\t\t}\n\t\t}\n\t}\n\tcomponentDidMount() {\n\t\tfetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${this.state.mealID}`)\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => this.props.filterID(data));\n\t}\n\tcomponentDidUpdate(prevProps,prevState) {\n\t\tif (prevState.meal[\"strMeal\"].localeCompare(\"\") === 0) {\n\t\t\tlet i = 1;\n\t\t\tlet formattedStr = \"\";\n\t\t\tlet isEmptyStr;\n\t\t\tlet ingredients = [];\n\t\t\tdo {\n\t\t\t\tisEmptyStr = (this.props.meal[`strMeasure${i}`] === \"\") || (this.props.meal[`strMeasure${i}`] === \" \");\n\t\t\t\tformattedStr = this.props.meal[`strIngredient${i}`] + (isEmptyStr ? \"\" : ` - ${this.props.meal[`strMeasure${i}`]}`);\n\t\t\t\tingredients.push(formattedStr);\n\t\t\t\ti++;\n\t\t\t} while((this.props.meal[`strIngredient${i}`] !== \"\") && (this.props.meal[`strIngredient${i}`] !== null) && (i <= 20));\n\n\t\t\tthis.setState(() => ({\n\t\t\t\tisLoading: false,\n\t\t\t\tmeal: {\n\t\t\t\t\tstrMeal: this.props.meal[\"strMeal\"],\n\t\t\t\t\tstrCategory: this.props.meal[\"strCategory\"],\n\t\t\t\t\tstrArea: this.props.meal[\"strArea\"],\n\t\t\t\t\tstrInstructions: this.props.meal[\"strInstructions\"],\n\t\t\t\t\tstrMealThumb: this.props.meal[\"strMealThumb\"],\n\t\t\t\t\tstrTags: this.props.meal[\"strTags\"],\n\t\t\t\t\tstrYoutube: this.props.meal[\"strYoutube\"],\n\t\t\t\t\tstrIngredients: [...ingredients],\n\t\t\t\t\tstrSource: this.props.meal[\"strSource\"]\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t{\n\t\t\t\tthis.state.isLoading ?\n\t\t\t\t\t<h2>Loading...</h2> :\n\t\t\t\t\t<RecipeCard {...this.state.meal} btnText=\"Home\" btnPath=\"/Home\" />\n\t\t\t}\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn { meal: state.filterMealsReducer[0] }\n}\n\nexport default connect(\n\tmapStateToProps,\n\t{ filterID }\n)(Meal)"]},"metadata":{},"sourceType":"module"}