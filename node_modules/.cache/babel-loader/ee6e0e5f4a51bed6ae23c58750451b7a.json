{"ast":null,"code":"var _jsxFileName = \"/Users/joshuacolvin/Desktop/Development/meal-db/meal-db/src/router/components/meals/random_meal/index.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { getRandomMeal } from '../../../../app_state/action_creators/getActions.jsx';\nimport { RecipeCard } from '../../../../static_components/recipeCard.jsx';\n\nclass RandomMeal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      meal: {\n        strMeal: \"\",\n        strCategory: \"\",\n        strArea: \"\",\n        strInstructions: \"\",\n        strMealThumb: \"\",\n        strTags: \"\",\n        strYoutube: \"\",\n        strIngredients: [],\n        strSource: \"\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://www.themealdb.com/api/json/v1/1/random.php\").then(response => response.json()).then(data => this.props.getRandomMeal(data));\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.meal[\"strMeal\"].localeCompare(\"\") === 0) {\n      let i = 1;\n      let formattedStr = \"\";\n      let isEmptyStr;\n      let ingredients = [];\n\n      do {\n        isEmptyStr = this.props.meal[`strMeasure${i}`] === \"\" || this.props.meal[`strMeasure${i}`] === \" \";\n        formattedStr = this.props.meal[`strIngredient${i}`] + (isEmptyStr ? \"\" : ` - ${this.props.meal[`strMeasure${i}`]}`);\n        ingredients.push(formattedStr);\n        i++;\n      } while (this.props.meal[`strIngredient${i}`] !== \"\" && this.props.meal[`strIngredient${i}`] !== null && i <= 20);\n\n      this.setState(() => ({\n        meal: {\n          strMeal: this.props.meal[\"strMeal\"],\n          strCategory: this.props.meal[\"strCategory\"],\n          strArea: this.props.meal[\"strArea\"],\n          strInstructions: this.props.meal[\"strInstructions\"],\n          strMealThumb: this.props.meal[\"strMealThumb\"],\n          strTags: this.props.meal[\"strTags\"],\n          strYoutube: this.props.meal[\"strYoutube\"],\n          strIngredients: [...ingredients],\n          strSource: this.props.meal[\"strSource\"]\n        }\n      }));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 4\n      }\n    }, this.state.meal[\"strMeal\"] && /*#__PURE__*/React.createElement(RecipeCard, {\n      meal: this.state.meal[\"strMeal\"],\n      category: this.state.meal[\"strCategory\"],\n      source: this.state.meal[\"strSource\"],\n      area: this.state.meal[\"strArea\"],\n      img: this.state.meal[\"strMealThumb\"],\n      ingredients: this.state.meal[\"strIngredients\"],\n      instructions: this.state.meal[\"strInstructions\"],\n      tags: this.state.meal[\"strTags\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    meal: state.mealsReducer[0]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getRandomMeal\n})(RandomMeal);","map":{"version":3,"sources":["/Users/joshuacolvin/Desktop/Development/meal-db/meal-db/src/router/components/meals/random_meal/index.jsx"],"names":["React","connect","getRandomMeal","RecipeCard","RandomMeal","Component","constructor","props","state","meal","strMeal","strCategory","strArea","strInstructions","strMealThumb","strTags","strYoutube","strIngredients","strSource","componentDidMount","fetch","then","response","json","data","componentDidUpdate","prevProps","prevState","localeCompare","i","formattedStr","isEmptyStr","ingredients","push","setState","render","mapStateToProps","mealsReducer"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { connect } from 'react-redux';\nimport { getRandomMeal } from '../../../../app_state/action_creators/getActions.jsx';\n\nimport { RecipeCard } from '../../../../static_components/recipeCard.jsx';\n\nclass RandomMeal extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tmeal: {\n\t\t\t\tstrMeal: \"\",\n\t\t\t\tstrCategory: \"\",\n\t\t\t\tstrArea: \"\",\n\t\t\t\tstrInstructions: \"\",\n\t\t\t\tstrMealThumb: \"\",\n\t\t\t\tstrTags: \"\",\n\t\t\t\tstrYoutube: \"\",\n\t\t\t\tstrIngredients: [],\n\t\t\t\tstrSource: \"\"\n\t\t\t}\n\t\t};\n\t}\n\tcomponentDidMount() {\n\t\tfetch(\"https://www.themealdb.com/api/json/v1/1/random.php\")\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => this.props.getRandomMeal(data));\n\t}\n\tcomponentDidUpdate(prevProps,prevState) {\n\t\tif (prevState.meal[\"strMeal\"].localeCompare(\"\") === 0) {\n\t\t\tlet i = 1;\n\t\t\tlet formattedStr = \"\";\n\t\t\tlet isEmptyStr;\n\t\t\tlet ingredients = [];\n\t\t\tdo {\n\t\t\t\tisEmptyStr = (this.props.meal[`strMeasure${i}`] === \"\") || (this.props.meal[`strMeasure${i}`] === \" \");\n\t\t\t\tformattedStr = this.props.meal[`strIngredient${i}`] + (isEmptyStr ? \"\" : ` - ${this.props.meal[`strMeasure${i}`]}`);\n\t\t\t\tingredients.push(formattedStr);\n\t\t\t\ti++;\n\t\t\t} while((this.props.meal[`strIngredient${i}`] !== \"\") && (this.props.meal[`strIngredient${i}`] !== null) && (i <= 20));\n\n\t\t\tthis.setState(() => ({\n\t\t\t\tmeal: {\n\t\t\t\t\tstrMeal: this.props.meal[\"strMeal\"],\n\t\t\t\t\tstrCategory: this.props.meal[\"strCategory\"],\n\t\t\t\t\tstrArea: this.props.meal[\"strArea\"],\n\t\t\t\t\tstrInstructions: this.props.meal[\"strInstructions\"],\n\t\t\t\t\tstrMealThumb: this.props.meal[\"strMealThumb\"],\n\t\t\t\t\tstrTags: this.props.meal[\"strTags\"],\n\t\t\t\t\tstrYoutube: this.props.meal[\"strYoutube\"],\n\t\t\t\t\tstrIngredients: [...ingredients],\n\t\t\t\t\tstrSource: this.props.meal[\"strSource\"]\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t}\n\trender() {\n\t\treturn(\n\t\t\t<React.Fragment>\n\t\t\t{\n\t\t\t\tthis.state.meal[\"strMeal\"] &&\n\t\t\t\t<RecipeCard meal={this.state.meal[\"strMeal\"]} category={this.state.meal[\"strCategory\"]} source={this.state.meal[\"strSource\"]}\n\t\t\t\t\t\t\tarea={this.state.meal[\"strArea\"]} img={this.state.meal[\"strMealThumb\"]} \n\t\t\t\t\t\t\tingredients={this.state.meal[\"strIngredients\"]} instructions={this.state.meal[\"strInstructions\"]} \n\t\t\t\t\t\t\ttags={this.state.meal[\"strTags\"]} />\n\t\t\t}\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\nconst mapStateToProps = state => {\n\treturn {meal: state.mealsReducer[0]}\n}\n\nexport default connect(\n\tmapStateToProps,\n\t{ getRandomMeal }\n)(RandomMeal)"]},"metadata":{},"sourceType":"module"}