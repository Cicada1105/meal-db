{"ast":null,"code":"var _jsxFileName = \"/Users/joshuacolvin/Desktop/Development/meal-db/src/router/components/meals/search_meal/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { filterName } from '../../../../app_state/action_creators/filterActions.jsx';\nimport styles from './index.module.css';\nimport { PreviewCard } from './previewCard.jsx';\nimport { Tag } from '../../../../static_components';\n\nconst SearchMeal = props => {\n  _s();\n\n  // Initialize state\n  const [filteredMeals, setFilteredMeals] = useState([]); // Initialie references\n\n  const inputRef = useRef(\"\");\n  useEffect(() => {\n    // Clear past meals that may still be loaded\n    props.filterName({\n      meals: undefined\n    }); // Return function for cleanupt \n\n    return function () {\n      console.log(\"Unmounting in useEffect\");\n    };\n  }, []);\n  useEffect(() => {\n    console.log(props.meals); //setFilteredMeals([...props.meals]);\n  }, [props.meals]);\n\n  const handleClick = function () {\n    let enteredVal = inputRef.current.value.toLowerCase();\n    let firstLetter = enteredVal.slice(0, 1);\n\n    if (firstLetter) {\n      fetch(`https://www.themealdb.com/api/json/v1/1/search.php?f=${firstLetter}`).then(response => response.json()).then(data => {\n        let filteredMeals = data.meals.filter(meal => meal[\"strMeal\"].toLowerCase().includes(enteredVal));\n        props.filterName({\n          meals: filteredMeals\n        });\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: styles.searchMealHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Tag, {\n    path: () => props.history.goBack(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, \"Go Back\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ins\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Search Meal\"))), /*#__PURE__*/React.createElement(\"input\", {\n    ref: inputRef,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.searchBtn,\n    onClick: e => handleClick(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }\n  }, \"Search\"), filteredMeals.length !== 0 ? filteredMeals.map((meal, i) => /*#__PURE__*/React.createElement(PreviewCard, Object.assign({\n    key: i\n  }, meal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 35\n    }\n  }))) : /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, \"Unable to find \\\"\", inputRef.current.value, \"\\\"\")\n  /*\n  \tprops.meals !== undefined && \n  \t(\n  \t\tprops.meals.length !== 0 ?\n  \t\tprops.meals.map((meal, i) => <PreviewCard key={i} {...meal} /> ) :\n  \t\t<h3>Unable to find \"{inputRef.current.value}\"</h3>\n  \t)*/\n  );\n};\n/*class SearchMeal extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tfilteredMeals: []\n\t\t}\n\t\tthis.inputRef = React.createRef();\n\t}\n\tcomponentDidMount() {\n\t\tthis.props.filterName({meals:undefined});\n\t}\n\thandleClick = function(event) {\n\t\tlet enteredVal = this.inputRef.current.value.toLowerCase();\n\t\tlet firstLetter = enteredVal.slice(0,1);\n\t\tif (firstLetter) {\n\t\t\tfetch(`https://www.themealdb.com/api/json/v1/1/search.php?f=${firstLetter}`)\n\t\t\t\t.then(response => response.json())\n\t\t\t\t.then(data =>  {\n\t\t\t\t\tlet filteredMeals = data.meals.filter((meal) => meal[\"strMeal\"].toLowerCase().includes(enteredVal));\n\t\t\t\t\tthis.props.filterName({\n\t\t\t\t\t\tmeals: filteredMeals\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t}\n\t}\n\trender() {\n\t\treturn(\n\t\t\t<React.Fragment>\n\t\t\t\t<header className={styles.searchMealHeader}>\n\t\t\t\t\t<Tag path={() => this.props.history.goBack()}>Go Back</Tag>\t\n\t\t\t\t\t<h2><ins>Search Meal</ins></h2>\n\t\t\t\t</header>\n\t\t\t\t<input ref={this.inputRef} type=\"text\" />\n\t\t\t\t<div className={styles.searchBtn} onClick={(e) => this.handleClick(e)}>Search</div>\n\t\t\t\t{\n\t\t\t\t\tthis.props.meals !== undefined && \n\t\t\t\t\t(\n\t\t\t\t\t\tthis.props.meals.length !== 0 ?\n\t\t\t\t\t\tthis.props.meals.map((meal, i) => <PreviewCard key={i} {...meal} /> ) :\n\t\t\t\t\t\t<h3>Unable to find \"{this.inputRef.current.value}\"</h3>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n*/\n\n\n_s(SearchMeal, \"uM33vZSdVToY9PcR1QorBPaLeWw=\");\n\n_c = SearchMeal;\n\nconst mapStateToProps = state => {\n  return {\n    meals: state.filterMealsReducer[0]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  filterName\n})(SearchMeal);\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchMeal\");","map":{"version":3,"sources":["/Users/joshuacolvin/Desktop/Development/meal-db/src/router/components/meals/search_meal/index.jsx"],"names":["React","useEffect","useState","useRef","connect","filterName","styles","PreviewCard","Tag","SearchMeal","props","filteredMeals","setFilteredMeals","inputRef","meals","undefined","console","log","handleClick","enteredVal","current","value","toLowerCase","firstLetter","slice","fetch","then","response","json","data","filter","meal","includes","searchMealHeader","history","goBack","searchBtn","e","length","map","i","mapStateToProps","state","filterMealsReducer"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\n\nimport { connect } from 'react-redux';\nimport { filterName } from '../../../../app_state/action_creators/filterActions.jsx';\n\nimport styles from './index.module.css';\n\nimport { PreviewCard } from './previewCard.jsx';\nimport { Tag } from '../../../../static_components';\n\nconst SearchMeal = (props) => {\n\t// Initialize state\n\tconst [filteredMeals, setFilteredMeals] = useState([]);\n\t// Initialie references\n\tconst inputRef = useRef(\"\");\n\n\tuseEffect(() => {\n\t\t// Clear past meals that may still be loaded\n\t\tprops.filterName({meals:undefined})\n\n\t\t// Return function for cleanupt \n\t\treturn function() {\n\t\t\tconsole.log(\"Unmounting in useEffect\")\n\t\t}\n\t},[]);\n\n\tuseEffect(() => {\n\t\tconsole.log(props.meals);\n\t\t//setFilteredMeals([...props.meals]);\n\t},[props.meals]);\n\n\tconst handleClick = function() {\n\t\tlet enteredVal = inputRef.current.value.toLowerCase();\n\t\tlet firstLetter = enteredVal.slice(0,1);\n\t\tif (firstLetter) {\n\t\t\tfetch(`https://www.themealdb.com/api/json/v1/1/search.php?f=${firstLetter}`)\n\t\t\t\t.then(response => response.json())\n\t\t\t\t.then(data =>  {\n\t\t\t\t\tlet filteredMeals = data.meals.filter((meal) => meal[\"strMeal\"].toLowerCase().includes(enteredVal));\n\t\t\t\t\tprops.filterName({\n\t\t\t\t\t\tmeals: filteredMeals\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t}\n\t}\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<header className={styles.searchMealHeader}>\n\t\t\t\t<Tag path={() => props.history.goBack()}>Go Back</Tag>\t\n\t\t\t\t<h2><ins>Search Meal</ins></h2>\n\t\t\t</header>\n\t\t\t<input ref={inputRef} type=\"text\" />\n\t\t\t<div className={styles.searchBtn} onClick={(e) => handleClick(e)}>Search</div>\n\t\t\t{\n\t\t\t\tfilteredMeals.length !== 0 ?\n\t\t\t\tfilteredMeals.map((meal,i) => <PreviewCard key={i} {...meal} />) :\n\t\t\t\t<h3>Unable to find \"{inputRef.current.value}\"</h3>\n\t\t\t/*\n\t\t\t\tprops.meals !== undefined && \n\t\t\t\t(\n\t\t\t\t\tprops.meals.length !== 0 ?\n\t\t\t\t\tprops.meals.map((meal, i) => <PreviewCard key={i} {...meal} /> ) :\n\t\t\t\t\t<h3>Unable to find \"{inputRef.current.value}\"</h3>\n\t\t\t\t)*/\n\t\t\t}\n\t\t</React.Fragment>\n\t)\n}\n/*class SearchMeal extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tfilteredMeals: []\n\t\t}\n\t\tthis.inputRef = React.createRef();\n\t}\n\tcomponentDidMount() {\n\t\tthis.props.filterName({meals:undefined});\n\t}\n\thandleClick = function(event) {\n\t\tlet enteredVal = this.inputRef.current.value.toLowerCase();\n\t\tlet firstLetter = enteredVal.slice(0,1);\n\t\tif (firstLetter) {\n\t\t\tfetch(`https://www.themealdb.com/api/json/v1/1/search.php?f=${firstLetter}`)\n\t\t\t\t.then(response => response.json())\n\t\t\t\t.then(data =>  {\n\t\t\t\t\tlet filteredMeals = data.meals.filter((meal) => meal[\"strMeal\"].toLowerCase().includes(enteredVal));\n\t\t\t\t\tthis.props.filterName({\n\t\t\t\t\t\tmeals: filteredMeals\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t}\n\t}\n\trender() {\n\t\treturn(\n\t\t\t<React.Fragment>\n\t\t\t\t<header className={styles.searchMealHeader}>\n\t\t\t\t\t<Tag path={() => this.props.history.goBack()}>Go Back</Tag>\t\n\t\t\t\t\t<h2><ins>Search Meal</ins></h2>\n\t\t\t\t</header>\n\t\t\t\t<input ref={this.inputRef} type=\"text\" />\n\t\t\t\t<div className={styles.searchBtn} onClick={(e) => this.handleClick(e)}>Search</div>\n\t\t\t\t{\n\t\t\t\t\tthis.props.meals !== undefined && \n\t\t\t\t\t(\n\t\t\t\t\t\tthis.props.meals.length !== 0 ?\n\t\t\t\t\t\tthis.props.meals.map((meal, i) => <PreviewCard key={i} {...meal} /> ) :\n\t\t\t\t\t\t<h3>Unable to find \"{this.inputRef.current.value}\"</h3>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n*/\nconst mapStateToProps = state => {\n\treturn {meals: state.filterMealsReducer[0]};\n}\nexport default connect(\n\tmapStateToProps,\n\t{ filterName }\n)(SearchMeal)"]},"metadata":{},"sourceType":"module"}