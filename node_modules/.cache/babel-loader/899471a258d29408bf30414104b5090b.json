{"ast":null,"code":"var _jsxFileName = \"/Users/joshuacolvin/Desktop/Development/meal-db/src/router/components/meals/search_meal/index.jsx\";\n//import React, { useEffect, useState, useRef } from 'react';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { filterName } from '../../../../app_state/action_creators/filterActions.jsx';\nimport styles from './index.module.css';\nimport { PreviewCard } from './previewCard.jsx';\nimport { Tag } from '../../../../static_components';\n\nclass SearchMeal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = () => {\n      // Update loading state\n      this.setState(function () {\n        return {\n          isDoneSearching: false\n        };\n      }); // Get user input\n\n      let enteredVal = this.inputRef.current.value.toLowerCase(); // Extract first letter for searching mealdb\n\n      let firstLetter = enteredVal.slice(0, 1);\n\n      if (firstLetter) {\n        fetch(`https://www.themealdb.com/api/json/v1/1/search.php?f=${firstLetter}`).then(response => response.json()).then(data => {\n          let filteredMeals = data.meals.filter(meal => meal[\"strMeal\"].toLowerCase().includes(enteredVal));\n          this.setState(() => ({\n            isDoneSearching: true\n          }));\n          this.props.filterName({\n            meals: filteredMeals\n          });\n        });\n      }\n    };\n\n    this.state = {\n      isDoneSearching: undefined\n    };\n    this.inputRef = /*#__PURE__*/React.createRef(\"\");\n  }\n\n  componentWillUnmount() {\n    this.props.filterName({\n      meals: []\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: styles.searchMealHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Tag, {\n      path: () => this.props.history.goBack(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 6\n      }\n    }, \"Go Back\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"ins\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 10\n      }\n    }, \"Search Meal\"))), /*#__PURE__*/React.createElement(\"input\", {\n      ref: this.inputRef,\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.searchBtn,\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }\n    }, \"Search\"), this.state.isDoneSearching === undefined || (!this.state.isDoneSearching ? /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, \"Loading...\") : this.props.meals.length !== 0 ? this.props.meals.map((meal, i) => /*#__PURE__*/React.createElement(PreviewCard, Object.assign({\n      key: i\n    }, meal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 41\n      }\n    }))) : /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 8\n      }\n    }, \"Unable to find \\\"\", this.inputRef.current.value, \"\\\"\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    meals: state.filterMealsReducer\n  };\n};\n\nexport default connect(mapStateToProps, {\n  filterName\n})(SearchMeal);","map":{"version":3,"sources":["/Users/joshuacolvin/Desktop/Development/meal-db/src/router/components/meals/search_meal/index.jsx"],"names":["React","connect","filterName","styles","PreviewCard","Tag","SearchMeal","Component","constructor","props","handleClick","setState","isDoneSearching","enteredVal","inputRef","current","value","toLowerCase","firstLetter","slice","fetch","then","response","json","data","filteredMeals","meals","filter","meal","includes","state","undefined","createRef","componentWillUnmount","render","searchMealHeader","history","goBack","searchBtn","length","map","i","mapStateToProps","filterMealsReducer"],"mappings":"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","sourcesContent":["//import React, { useEffect, useState, useRef } from 'react';\nimport React from 'react';\n\nimport { connect } from 'react-redux';\nimport { filterName } from '../../../../app_state/action_creators/filterActions.jsx';\n\nimport styles from './index.module.css';\n\nimport { PreviewCard } from './previewCard.jsx';\nimport { Tag } from '../../../../static_components';\n\n\nclass SearchMeal extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisDoneSearching: undefined\n\t\t}\n\t\tthis.inputRef = React.createRef(\"\");\n\t}\n\tcomponentWillUnmount() {\n\t\tthis.props.filterName({\n\t\t\tmeals: []\n\t\t});\n\t}\n\thandleClick = () => {\n\t\t// Update loading state\n\t\tthis.setState(function() {\n\t\t\treturn {\n\t\t\t\tisDoneSearching: false\n\t\t\t}\n\t\t});\n\t\t\n\t\t// Get user input\n\t\tlet enteredVal = this.inputRef.current.value.toLowerCase();\n\t\t// Extract first letter for searching mealdb\n\t\tlet firstLetter = enteredVal.slice(0,1);\n\t\tif (firstLetter) {\n\t\t\tfetch(`https://www.themealdb.com/api/json/v1/1/search.php?f=${firstLetter}`)\n\t\t\t\t.then(response => response.json())\n\t\t\t\t.then(data =>  {\n\t\t\t\t\tlet filteredMeals = data.meals.filter((meal) => meal[\"strMeal\"].toLowerCase().includes(enteredVal));\n\t\t\t\t\tthis.setState(() => ({\n\t\t\t\t\t\tisDoneSearching: true\n\t\t\t\t\t}));\n\t\t\t\t\tthis.props.filterName({\n\t\t\t\t\t\tmeals: filteredMeals\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<header className={styles.searchMealHeader}>\n\t\t\t\t\t<Tag path={() => this.props.history.goBack()}>Go Back</Tag>\n\t\t\t\t\t<h2><ins>Search Meal</ins></h2>\n\t\t\t\t</header>\n\t\t\t\t<input ref={this.inputRef} type=\"text\" />\n\t\t\t\t<div className={styles.searchBtn} onClick={this.handleClick}>Search</div>\n\t\t\t\t{\n\t\t\t\t\tthis.state.isDoneSearching === undefined ||\n\t\t\t\t\t(\n\t\t\t\t\t\t!this.state.isDoneSearching ?\n\t\t\t\t\t\t<h3>Loading...</h3> :\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\tthis.props.meals.length !== 0 ?\n\t\t\t\t\t\t\tthis.props.meals.map((meal,i) => <PreviewCard key={i} {...meal} />) :\n\t\t\t\t\t\t\t<h3>Unable to find \"{this.inputRef.current.value}\"</h3>\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {meals: state.filterMealsReducer};\n}\nexport default connect(\n\tmapStateToProps,\n\t{ filterName }\n)(SearchMeal)"]},"metadata":{},"sourceType":"module"}