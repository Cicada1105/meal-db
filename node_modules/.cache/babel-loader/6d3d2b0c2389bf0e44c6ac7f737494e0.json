{"ast":null,"code":"var _jsxFileName = \"/Users/joshuacolvin/Desktop/Development/meal-db/src/router/components/meals/index.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { filterID } from '../../../app_state/action_creators/filterActions.jsx';\nimport { RecipeCard } from '../../../static_components';\n\nclass Meal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      mealID: props.match.params.mealID,\n      _meal: {}\n    };\n  } // Fetch meals\n\n\n  componentDidMount() {\n    fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${this.state.mealID}`).then(response => response.json()).then(data => {\n      this.props.filterID(data);\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // Store retrieved meals into local state for formatting \n    if (prevProps.meal.length === 0 && this.props.meal.length === 1) {\n      let i = 1;\n      let _meal = this.props.meal;\n      let formattedStr = \"\";\n      let isEmptyStr;\n      let ingredients = [];\n\n      do {\n        isEmptyStr = _meal[`strMeasure${i}`] === \"\" || _meal[`strMeasure${i}`] === \" \";\n        formattedStr = _meal[`strIngredient${i}`] + (isEmptyStr ? \"\" : ` - ${_meal[`strMeasure${i}`]}`);\n        ingredients.push(formattedStr);\n        i++;\n      } while (_meal[`strIngredient${i}`] !== \"\" && _meal[`strIngredient${i}`] !== null && i <= 20);\n\n      this.setState((prevState, currProps) => {\n        let meal = currProps.meal[0];\n        return {\n          isLoading: false,\n          _meal: {\n            strMeal: meal[\"strMeal\"],\n            strCategory: meal[\"strCategory\"],\n            strArea: meal[\"strArea\"],\n            strInstructions: meal[\"strInstructions\"],\n            strMealThumb: meal[\"strMealThumb\"],\n            strTags: meal[\"strTags\"],\n            strYoutube: meal[\"strYoutube\"],\n            strIngredients: [...ingredients],\n            strSource: meal[\"strSource\"]\n          }\n        };\n      });\n    }\n  } // Cleanup meal state \n\n\n  componenWillUnmount() {\n    filterID({\n      meals: []\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 4\n      }\n    }, this.state.isLoading ? /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 6\n      }\n    }, \"Loading...\") : /*#__PURE__*/React.createElement(RecipeCard, Object.assign({}, this.state._meal, {\n      btnText: \"Home\",\n      btnPath: \"/Home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 6\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    meal: state.filterMealsReducer\n  };\n};\n\nexport default connect(mapStateToProps, {\n  filterID\n})(Meal);","map":{"version":3,"sources":["/Users/joshuacolvin/Desktop/Development/meal-db/src/router/components/meals/index.jsx"],"names":["React","connect","filterID","RecipeCard","Meal","Component","constructor","props","state","isLoading","mealID","match","params","_meal","componentDidMount","fetch","then","response","json","data","componentDidUpdate","prevProps","prevState","meal","length","i","formattedStr","isEmptyStr","ingredients","push","setState","currProps","strMeal","strCategory","strArea","strInstructions","strMealThumb","strTags","strYoutube","strIngredients","strSource","componenWillUnmount","meals","render","mapStateToProps","filterMealsReducer"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { connect } from 'react-redux';\nimport { filterID } from '../../../app_state/action_creators/filterActions.jsx';\n\nimport { RecipeCard } from '../../../static_components';\n\nclass Meal extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisLoading: true,\n\t\t\tmealID: props.match.params.mealID,\n\t\t\t_meal: {}\n\t\t}\n\t}\n\n\t// Fetch meals\n\tcomponentDidMount() {\n\t\tfetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${this.state.mealID}`)\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\t\t\t\tthis.props.filterID(data);\n\t\t\t});\n\t}\n\tcomponentDidUpdate(prevProps,prevState) {\n\t\t// Store retrieved meals into local state for formatting \n\t\tif ((prevProps.meal.length === 0) && (this.props.meal.length === 1)) {\n\t\t\tlet i = 1;\n\t\t\tlet _meal = this.props.meal;\n\t\t\tlet formattedStr = \"\";\n\t\t\tlet isEmptyStr;\n\t\t\tlet ingredients = [];\n\t\t\tdo {\n\t\t\t\tisEmptyStr = (_meal[`strMeasure${i}`] === \"\") || (_meal[`strMeasure${i}`] === \" \");\n\t\t\t\tformattedStr = _meal[`strIngredient${i}`] + (isEmptyStr ? \"\" : ` - ${_meal[`strMeasure${i}`]}`);\n\t\t\t\tingredients.push(formattedStr);\n\t\t\t\ti++;\n\t\t\t} while((_meal[`strIngredient${i}`] !== \"\") && (_meal[`strIngredient${i}`] !== null) && (i <= 20));\n\n\t\t\tthis.setState((prevState,currProps) => {\n\t\t\t\tlet meal = currProps.meal[0];\n\t\t\t\treturn ({\n\t\t\t\t\tisLoading: false,\n\t\t\t\t\t_meal: {\n\t\t\t\t\t\tstrMeal: meal[\"strMeal\"],\n\t\t\t\t\t\tstrCategory: meal[\"strCategory\"],\n\t\t\t\t\t\tstrArea: meal[\"strArea\"],\n\t\t\t\t\t\tstrInstructions: meal[\"strInstructions\"],\n\t\t\t\t\t\tstrMealThumb: meal[\"strMealThumb\"],\n\t\t\t\t\t\tstrTags: meal[\"strTags\"],\n\t\t\t\t\t\tstrYoutube: meal[\"strYoutube\"],\n\t\t\t\t\t\tstrIngredients: [...ingredients],\n\t\t\t\t\t\tstrSource: meal[\"strSource\"]\t\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t});\n\t\t}\n\t}\n\t// Cleanup meal state \n\tcomponenWillUnmount() {\n\t\tfilterID({\n\t\t\tmeals:[]\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t{\n\t\t\t\tthis.state.isLoading ?\n\t\t\t\t\t<h2>Loading...</h2> :\n\t\t\t\t\t<RecipeCard {...this.state._meal} btnText=\"Home\" btnPath=\"/Home\" />\n\t\t\t}\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn { meal: state.filterMealsReducer }\n}\n\nexport default connect(\n\tmapStateToProps,\n\t{ filterID }\n)(Meal)"]},"metadata":{},"sourceType":"module"}